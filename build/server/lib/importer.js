// Generated by CoffeeScript 1.10.0
var Konnector, async, handleNotification, localization, log;

async = require('async');

handleNotification = require('./notification_handler');

log = require('printit')({
  prefix: null,
  date: true
});

Konnector = require('../models/konnector');

localization = require('./localization_manager');

module.exports = function(konnector) {
  var model;
  if ((konnector.fieldValues != null) && konnector.isImporting === false) {
    log.debug("Importing " + konnector.slug);
    model = require("../konnectors/" + konnector.slug);
    return konnector["import"](function(err, notifContents) {
      var data, localizationKey;
      if ((err != null) && ((typeof err === 'object' && Object.keys(err).length > 0) || typeof err === String)) {
        log.error(err);
        localizationKey = 'notification import error';
        notifContents = [
          localization.t(localizationKey), {
            name: model.name
          }
        ];
      }
      handleNotification(this, notifContents);
      data = {
        lastAutoImport: new Date()
      };
      return konnector.updateAttributes(data, function(err) {
        if (err != null) {
          return log.error(err);
        }
      });
    });
  } else {
    return log.debug("Connector " + konnector.slug + " already importing");
  }
};
