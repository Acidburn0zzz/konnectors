// Generated by CoffeeScript 1.9.0
var TwitterStat, americano, async, localization, log, moment, querystring, request, requestJson, saveTweets;

americano = require('americano-cozy');

querystring = require('querystring');

requestJson = require('request-json');

request = require('request');

moment = require('moment');

async = require('async');

log = require('printit')({
  prefix: "Twitter Stats",
  date: true
});

localization = require('../lib/localization_manager');

TwitterStat = americano.getModel('TwitterStat', {
  date: Date,
  followerCount: Number,
  tweetCount: Number,
  listedCount: Number
});

TwitterStat.all = function(callback) {
  return TwitterStat.request('byDate', callback);
};

module.exports = {
  name: "Twitter Stats",
  slug: "twitter-stats",
  description: 'konnector description twitter stats',
  vendorLink: "https://twitter.com/",
  fields: {
    consumerKey: "text",
    consumerSecret: "password",
    accessToken: "text",
    accessTokenSecret: "password"
  },
  models: {
    tweets: TwitterStat
  },
  modelNames: ["TwitterStat"],
  init: function(callback) {
    var map;
    map = function(doc) {
      return emit(doc.date, doc);
    };
    return TwitterStat.defineRequest('byDate', map, function(err) {
      return callback(err);
    });
  },
  fetch: function(requiredFields, callback) {
    log.info("Import started");
    return saveTweets(requiredFields, callback);
  }
};

saveTweets = function(requiredFields, callback) {
  var client, params, path, rootPath, url;
  url = "https://api.twitter.com/1.1/";
  client = requestJson.newClient(url);
  client.options = {
    oauth: {
      consumer_key: requiredFields.consumerKey,
      consumer_secret: requiredFields.consumerSecret,
      token: requiredFields.accessToken,
      token_secret: requiredFields.accessTokenSecret
    }
  };
  rootPath = "statuses/user_timeline.json?";
  rootPath = "statuses/user_timeline.json";
  path = rootPath;
  params = {
    descending: true
  };
  log.debug('run request');
  return client.get(path, function(err, res, user) {
    console.log(user[0].user.followers_count);
    console.log(user[0].user.statuses_count);
    console.log(user[0].user.listed_count);
    log.debug('end request');
    return callback();
  });
};
