// Generated by CoffeeScript 1.9.3
var Commit, async, buildDuplicatedArrays, count, deleteDuplicates, log;

async = require('async');

Commit = require('../models/commit');

log = require('printit')({
  prefix: 'konnectors'
});

count = 0;

module.exports = function(callback) {
  count = 0;
  log.info('looking for duplicated commits...');
  return Commit.all(function(err, commits) {
    var duplicatesArray;
    duplicatesArray = buildDuplicatedArrays(commits);
    return async.eachSeries(duplicatesArray, function(duplicates, next) {
      var ref;
      log.info("ok");
      if ((ref = duplicates.length) === 0 || ref === 1) {
        return next();
      } else {
        return deleteDuplicates(duplicates, next);
      }
    }, function(err) {
      log.info("deleted duplicated commits: " + count);
      return callback();
    });
  });
};

buildDuplicatedArrays = function(commits) {
  var commit, i, len, name, shaHash;
  shaHash = {};
  for (i = 0, len = commits.length; i < len; i++) {
    commit = commits[i];
    if (shaHash[name = commit.sha] == null) {
      shaHash[name] = [];
    }
    shaHash[commit.sha].push(commit);
  }
  return Object.keys(shaHash).map(function(key) {
    return shaHash[key];
  });
};

deleteDuplicates = function(duplicates, callback) {
  duplicates.pop();
  return async.eachSeries(duplicates, function(duplicate, next) {
    return duplicate.destroy(function(err) {
      if (err) {
        log.error(err);
      } else {
        count++;
      }
      return next();
    });
  }, function(err) {
    return callback();
  });
};
